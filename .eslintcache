[{"/home/rugved/mySpaceE/TY/SEM-VI/MIP-SEM6/gmail-clone/src/index.js":"1","/home/rugved/mySpaceE/TY/SEM-VI/MIP-SEM6/gmail-clone/src/App.js":"2","/home/rugved/mySpaceE/TY/SEM-VI/MIP-SEM6/gmail-clone/src/serviceWorker.js":"3","/home/rugved/mySpaceE/TY/SEM-VI/MIP-SEM6/gmail-clone/src/app/store.js":"4","/home/rugved/mySpaceE/TY/SEM-VI/MIP-SEM6/gmail-clone/src/firebase.js":"5","/home/rugved/mySpaceE/TY/SEM-VI/MIP-SEM6/gmail-clone/src/features/userSlice.js":"6","/home/rugved/mySpaceE/TY/SEM-VI/MIP-SEM6/gmail-clone/src/features/mail.js":"7","/home/rugved/mySpaceE/TY/SEM-VI/MIP-SEM6/gmail-clone/src/features/mailSlice.js":"8","/home/rugved/mySpaceE/TY/SEM-VI/MIP-SEM6/gmail-clone/src/components/Header/Header.js":"9","/home/rugved/mySpaceE/TY/SEM-VI/MIP-SEM6/gmail-clone/src/components/Sidebar/Sidebar.js":"10","/home/rugved/mySpaceE/TY/SEM-VI/MIP-SEM6/gmail-clone/src/components/EmailList/EmailList.js":"11","/home/rugved/mySpaceE/TY/SEM-VI/MIP-SEM6/gmail-clone/src/components/Mail/Mail.js":"12","/home/rugved/mySpaceE/TY/SEM-VI/MIP-SEM6/gmail-clone/src/components/SendMail/SendMail.js":"13","/home/rugved/mySpaceE/TY/SEM-VI/MIP-SEM6/gmail-clone/src/components/Login/Login.js":"14","/home/rugved/mySpaceE/TY/SEM-VI/MIP-SEM6/gmail-clone/src/components/SidebarOption/SidebarOption.js":"15","/home/rugved/mySpaceE/TY/SEM-VI/MIP-SEM6/gmail-clone/src/components/Section/Section.js":"16","/home/rugved/mySpaceE/TY/SEM-VI/MIP-SEM6/gmail-clone/src/components/EmailRow/EmailRow.js":"17","/home/rugved/mySpaceE/TY/SEM-VI/MIP-SEM6/gmail-clone/src/components/Meet/Meet.js":"18","/home/rugved/mySpaceE/TY/SEM-VI/MIP-SEM6/gmail-clone/src/features/commonSlice.js":"19"},{"size":644,"mtime":1612152889849,"results":"20","hashOfConfig":"21"},{"size":3158,"mtime":1616093236947,"results":"22","hashOfConfig":"21"},{"size":5141,"mtime":1612152889849,"results":"23","hashOfConfig":"21"},{"size":340,"mtime":1615955737579,"results":"24","hashOfConfig":"21"},{"size":697,"mtime":1615812299799,"results":"25","hashOfConfig":"21"},{"size":442,"mtime":1613555581671,"results":"26","hashOfConfig":"21"},{"size":547,"mtime":1613395565952,"results":"27","hashOfConfig":"21"},{"size":730,"mtime":1613555581671,"results":"28","hashOfConfig":"21"},{"size":2303,"mtime":1616093009407,"results":"29","hashOfConfig":"21"},{"size":3276,"mtime":1615905453045,"results":"30","hashOfConfig":"21"},{"size":3045,"mtime":1616090281896,"results":"31","hashOfConfig":"21"},{"size":3262,"mtime":1615527807690,"results":"32","hashOfConfig":"21"},{"size":3196,"mtime":1616092573255,"results":"33","hashOfConfig":"21"},{"size":1824,"mtime":1616132488876,"results":"34","hashOfConfig":"21"},{"size":347,"mtime":1615528169178,"results":"35","hashOfConfig":"21"},{"size":463,"mtime":1615528320470,"results":"36","hashOfConfig":"21"},{"size":1743,"mtime":1615834056151,"results":"37","hashOfConfig":"21"},{"size":2101,"mtime":1615905358672,"results":"38","hashOfConfig":"21"},{"size":429,"mtime":1616088740734,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1j7171z",{"filePath":"43","messages":"44","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"42"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"/home/rugved/mySpaceE/TY/SEM-VI/MIP-SEM6/gmail-clone/src/index.js",[],["84","85"],"/home/rugved/mySpaceE/TY/SEM-VI/MIP-SEM6/gmail-clone/src/App.js",["86","87","88","89"],"import React, { useEffect, useState } from 'react';\r\nimport './App.css';\r\nimport Header from './components/Header/Header';\r\nimport Sidebar from './components/Sidebar/Sidebar';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\nimport Mail from './components/Mail/Mail';\r\nimport EmailList from './components/EmailList/EmailList';\r\nimport SendMail from './components/SendMail/SendMail';\r\nimport Login from \"./components/Login/Login\"\r\nimport { selectSendMessageIsOpen } from './features/mail';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { selectUser, login } from './features/userSlice';\r\nimport { auth, db } from './firebase';\r\nimport Meet from './components/Meet/Meet';\r\nimport { selectShowSidebar } from './features/commonSlice';\r\n\r\nfunction App() {\r\n  const sendMessageIsOpen = useSelector(selectSendMessageIsOpen);\r\n  const user = useSelector(selectUser);\r\n  const showSideBar = useSelector(selectShowSidebar)\r\n  const dispatch = useDispatch();\r\n  \r\n\r\n  const [emails,setEmails] = useState([])\r\n\r\n  const getMails = () => {\r\n    db.collection('emails').where('to','==',auth.currentUser.email).limit(10).orderBy('timestamp','desc').onSnapshot(snapshot => {\r\n      setEmails(snapshot.docs.map(doc => ({\r\n          id: doc.id,\r\n          data: doc.data()\r\n      })))\r\n    })\r\n  }\r\n\r\n  const showSearchResults = (query) => {\r\n    console.log(query)\r\n    if(query.length == 0){\r\n      getMails()\r\n      return\r\n    }\r\n    db.collection('emails')\r\n    .where('to','==',auth.currentUser.email)\r\n    .where('searchableKeywords','array-contains',query)\r\n    .limit(10)\r\n    .orderBy('timestamp','desc')\r\n    .onSnapshot(snapshot => {\r\n      console.log(snapshot.docs.length)\r\n      if(snapshot.docs.length == 0){\r\n        setEmails(getMails())\r\n      }\r\n      else{\r\n        setEmails(snapshot.docs.map(doc => ({\r\n            id: doc.id,\r\n            data: doc.data()\r\n        })))\r\n      }\r\n    })\r\n    // setShowSearch(true)\r\n  }\r\n\r\n  useEffect(() => {\r\n    auth.onAuthStateChanged(user => {\r\n      if (user) {\r\n        //user is logged in\r\n        dispatch(\r\n          login({\r\n            displayName: user.displayName,\r\n            email: user.email,\r\n            photoUrl: user.photoURL\r\n          })\r\n        );\r\n        getMails()\r\n      }\r\n    });\r\n  }, []);\r\n  \r\n  return (\r\n    <Router>\r\n      {!user ? (\r\n        <Login />\r\n      ): (\r\n        <div className=\"app\">\r\n        <Header showSearchResults={showSearchResults} />\r\n  \r\n        <div className=\"app__body\">\r\n          {showSideBar && <Sidebar />}\r\n  \r\n          <Switch>\r\n            <Route path=\"/mail\">\r\n              <Mail />\r\n            </Route>\r\n            <Route path=\"/meet/single/:userMail\">\r\n              <Meet />\r\n            </Route>\r\n            <Route path=\"/meet/conference/:userMail\">\r\n              <Meet />\r\n            </Route>\r\n            <Route path=\"/\">\r\n              <EmailList emails={emails} setEmails={setEmails} />\r\n            </Route>\r\n          </Switch>\r\n  \r\n        </div>\r\n        {sendMessageIsOpen && <SendMail />}\r\n      </div>\r\n      )}\r\n\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","/home/rugved/mySpaceE/TY/SEM-VI/MIP-SEM6/gmail-clone/src/serviceWorker.js",[],"/home/rugved/mySpaceE/TY/SEM-VI/MIP-SEM6/gmail-clone/src/app/store.js",[],"/home/rugved/mySpaceE/TY/SEM-VI/MIP-SEM6/gmail-clone/src/firebase.js",["90"],"import firebase from 'firebase'\n\nconst firebaseConfig = {\n    apiKey: process.env.apiKey || \"AIzaSyA6rWV50SdKlGnmnBOqfVJ6lu4UeCjtt_U\",\n    authDomain: process.env.authDomain || \"clone-f427f.firebaseapp.com\",\n    projectId: process.env.projectId || \"clone-f427f\",\n    storageBucket: process.env.storageBucket || \"clone-f427f.appspot.com\",\n    messagingSenderId: process.env.messagingSenderId || \"1086229062538\",\n    appId: process.env.appId || \"1:1086229062538:web:f3f5437418ee5c1f721e73\"\n};\n\n\nconst firebaseApp = firebase.initializeApp(firebaseConfig)\nconst db = firebase.firestore()\nconst auth = firebase.auth()\nconst provider = new firebase.auth.GoogleAuthProvider()\n\nexport { db,auth,provider }","/home/rugved/mySpaceE/TY/SEM-VI/MIP-SEM6/gmail-clone/src/features/userSlice.js",[],"/home/rugved/mySpaceE/TY/SEM-VI/MIP-SEM6/gmail-clone/src/features/mail.js",[],"/home/rugved/mySpaceE/TY/SEM-VI/MIP-SEM6/gmail-clone/src/features/mailSlice.js",[],"/home/rugved/mySpaceE/TY/SEM-VI/MIP-SEM6/gmail-clone/src/components/Header/Header.js",[],"/home/rugved/mySpaceE/TY/SEM-VI/MIP-SEM6/gmail-clone/src/components/Sidebar/Sidebar.js",[],"/home/rugved/mySpaceE/TY/SEM-VI/MIP-SEM6/gmail-clone/src/components/EmailList/EmailList.js",["91","92","93","94"],"import React, { useEffect, useState } from 'react';\nimport styles from './EmailList.module.css';\nimport { Checkbox, IconButton } from \"@material-ui/core\";\nimport RedoIcon from \"@material-ui/icons/Redo\";\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport KeyboardHideIcon from \"@material-ui/icons/KeyboardHide\";\nimport InboxIcon from \"@material-ui/icons/Inbox\";\nimport PeopleIcon from \"@material-ui/icons/People\";\nimport LocalOfferIcon from \"@material-ui/icons/LocalOffer\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport Section from '../Section/Section';\nimport { auth, db } from '../../firebase';\n\nimport EmailRow from '../EmailRow/EmailRow'\nfunction EmailList({ emails,setEmails }) {\n    // const [emails,setEmails] = useState(emails)\n\n    return (<div className={styles.emailList}>\n            <div className={styles.emailList__settings}>\n                <div className={styles.emailList__settingsLeft}>\n                    <Checkbox />\n                    <IconButton>\n                        <ArrowDropDownIcon />\n                    </IconButton>\n                    <IconButton>\n                        <RedoIcon />\n                    </IconButton>\n                    <IconButton>\n                        <MoreVertIcon />\n                    </IconButton>\n                </div>\n                <div className={styles.emailList__settingsRight}>\n                    <IconButton>\n                        <ChevronLeftIcon />\n                    </IconButton>\n                    <IconButton>\n                        <ChevronRightIcon />\n                    </IconButton>\n                    <IconButton>\n                        <KeyboardHideIcon />\n                    </IconButton>\n                    <IconButton>\n                        <SettingsIcon />\n                    </IconButton>\n                </div>\n            </div>\n\n            <div className={styles.emailList__sections} >\n                <Section Icon={InboxIcon} title=\"Primary\" color=\"red\" selected />  \n                <Section Icon={PeopleIcon} title=\"Social\" color=\"#1A73E8\" />    \n                <Section Icon={LocalOfferIcon} title=\"Promotions\" color=\"green\" />  \n            </div>\n\n            <div className={styles.emailList__list}>\n                {emails.map(({id,data:{to,from,subject,message,timestamp}}) => {\n                    return <EmailRow\n                        id={id}\n                        key={id}\n                        title={from}\n                        subject={subject}\n                        description={message}\n                        time={new Date(timestamp?.seconds*1000).toUTCString()}\n                    />\n                })}\n                {/* {emails.map({ id,data: {to,subject,message,timestamp} } => {\n                })} */}\n            </div>\n        </div>\n    );\n}\n\nexport default EmailList\n","/home/rugved/mySpaceE/TY/SEM-VI/MIP-SEM6/gmail-clone/src/components/Mail/Mail.js",[],"/home/rugved/mySpaceE/TY/SEM-VI/MIP-SEM6/gmail-clone/src/components/SendMail/SendMail.js",["95","96"],"import React from 'react';\nimport styles from './SendMail.module.css';\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { Button } from '@material-ui/core';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch } from 'react-redux';\nimport { closeSendMessage } from '../../features/mail';\nimport { auth, db } from '../../firebase';\nimport firebase from 'firebase'\n\nfunction SendMail() {\n\n    const { register, handleSubmit, watch, errors } = useForm();\n    const dispatch = useDispatch()\n\n    const generateKeywords = (formData) => {\n        let searchableKeywords = [auth.currentUser.email,...formData.subject.split(' ')]\n        let prev = ''\n        for(var i=0;i<formData.subject.length;i++){\n            prev = prev  + formData.subject.charAt(i)\n            searchableKeywords.push(prev)\n        }\n        return searchableKeywords\n    }\n    \n    \n    const onSubmit = (formData) => {\n        // check here if email exist (for now just setting it to true)\n        const emailExists = true \n        console.log(generateKeywords(formData))\n        if(emailExists){   \n            db.collection('emails').add({\n                to: formData.to,\n                from: auth.currentUser.email,\n                subject: formData.subject,\n                message: formData.message,\n                timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n                searchableKeywords:generateKeywords(formData),\n                read: false\n            })\n        }\n        else{\n            console.log(formData.to + \" doesn't exist.\")\n        }\n        dispatch(closeSendMessage())\n\n    }\n\n    return <div className={styles.sendMail}>\n        <div className={styles.sendMail__header}>\n            <h3>New Message</h3>\n            <CloseIcon \n                className={styles.sendMail__close} \n                onClick={() => dispatch(closeSendMessage())}\n            />\n        </div>\n    \n        <form onSubmit={handleSubmit(onSubmit)}>\n            <input \n                name=\"to\"\n                placeholder=\"To\"\n                type=\"text\" \n                type=\"email\"\n                ref={register({ required: true })} \n            />\n            {errors.to && <p className={styles.sendMail__error}>To is required</p>}\n            <input\n                name=\"subject\"\n                placeholder=\"Subject\"\n                type=\"text\"\n                ref={register({ required: true })} \n            />\n            {errors.to && <p className={styles.sendMail__error}>Subject is required</p>}\n\n           <input\n                name=\"message\"\n                placeholder=\"Message...\"\n                type=\"text\" \n                className={styles.sendMail__message}\n                ref={register({ required: true })} \n            />\n            {errors.to && <p className={styles.sendMail__error}>Message is required</p>}\n\n            <div className={styles.sendMail__options}>\n                <Button \n                    classNmae=\"sendMail__send\"\n                    variant=\"contained\"\n                    color=\"primary\"\n                    type=\"submit\"\n                >Send</Button>\n            </div>\n        </form> \n    </div>;\n}\n\nexport default SendMail\n","/home/rugved/mySpaceE/TY/SEM-VI/MIP-SEM6/gmail-clone/src/components/Login/Login.js",[],"/home/rugved/mySpaceE/TY/SEM-VI/MIP-SEM6/gmail-clone/src/components/SidebarOption/SidebarOption.js",[],"/home/rugved/mySpaceE/TY/SEM-VI/MIP-SEM6/gmail-clone/src/components/Section/Section.js",[],"/home/rugved/mySpaceE/TY/SEM-VI/MIP-SEM6/gmail-clone/src/components/EmailRow/EmailRow.js",[],"/home/rugved/mySpaceE/TY/SEM-VI/MIP-SEM6/gmail-clone/src/components/Meet/Meet.js",["97"],"import React, { useState } from 'react'\n\nimport { Jutsu } from 'react-jutsu'\nimport { useHistory } from 'react-router-dom';\nimport { auth } from '../../firebase'\n\nconst Meet = () => {\n    const history = useHistory();\n    const fullUrl = window.location.href\n    let meetCode = ''\n    let userClient = ''\n    let meetPassword = ''\n    const currentUser = auth.currentUser\n\n    if(fullUrl.includes('/meet/single/')){\n        userClient = fullUrl.split('/meet/single/')[1]\n        if(currentUser.email > userClient){\n            meetCode = userClient + '-' + currentUser.email\n        }\n        else{\n            meetCode = currentUser.email + '-' + userClient \n        }\n        meetPassword = meetCode // temporary\n    }else if(fullUrl.includes('/meet/conference/')){\n        let confCode = fullUrl.split('/meet/conference/')[1] || ''\n        meetCode = confCode\n        meetPassword = ''\n    }\n\n\n  const [room, setRoom] = useState(meetCode)\n  const [name, setName] = useState(currentUser.displayName)\n  const [call, setCall] = useState(userClient == '' ? false : true)\n  const [password, setPassword] = useState(meetPassword)\n\n  const handleClick = event => {\n    event.preventDefault()\n    console.log(room+\" \"+name+\" \"+password)\n    if (room && name) setCall(true)\n  }\n\n\n\n  return call ? (\n    <Jutsu\n      roomName={room}\n      displayName={name}\n      password={password}\n      onMeetingEnd={() => history.push('/')}\n      loadingComponent={<p>loading ...</p>}\n      errorComponent={<p>Oops, something went wrong</p>} />\n  ) : (\n    <div>\n        <form>\n            <input id='room' type='text' placeholder='Room' value={room} onChange={(e) => setRoom(e.target.value)} />\n            <input id='name' type='text' placeholder='Name' value={name} onChange={(e) => setName(e.target.value)} />\n            <input id='password' type='text' placeholder='Password (optional)' value={password} onChange={(e) => setPassword(e.target.value)} />\n            <button onClick={handleClick} type='submit'>\n                Start / Join\n            </button>\n        </form>\n    </div>\n  )\n}\n\nexport default Meet","/home/rugved/mySpaceE/TY/SEM-VI/MIP-SEM6/gmail-clone/src/features/commonSlice.js",[],{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","severity":1,"message":"103","line":9,"column":3,"nodeType":"104","messageId":"105","endLine":9,"endColumn":7},{"ruleId":"106","severity":1,"message":"107","line":42,"column":21,"nodeType":"108","messageId":"109","endLine":42,"endColumn":23},{"ruleId":"106","severity":1,"message":"107","line":53,"column":31,"nodeType":"108","messageId":"109","endLine":53,"endColumn":33},{"ruleId":"110","severity":1,"message":"111","line":80,"column":6,"nodeType":"112","endLine":80,"endColumn":8,"suggestions":"113"},{"ruleId":"102","severity":1,"message":"114","line":13,"column":7,"nodeType":"104","messageId":"105","endLine":13,"endColumn":18},{"ruleId":"102","severity":1,"message":"115","line":1,"column":17,"nodeType":"104","messageId":"105","endLine":1,"endColumn":26},{"ruleId":"102","severity":1,"message":"116","line":1,"column":28,"nodeType":"104","messageId":"105","endLine":1,"endColumn":36},{"ruleId":"102","severity":1,"message":"117","line":15,"column":10,"nodeType":"104","messageId":"105","endLine":15,"endColumn":14},{"ruleId":"102","severity":1,"message":"118","line":15,"column":16,"nodeType":"104","messageId":"105","endLine":15,"endColumn":18},{"ruleId":"102","severity":1,"message":"119","line":13,"column":37,"nodeType":"104","messageId":"105","endLine":13,"endColumn":42},{"ruleId":"120","severity":1,"message":"121","line":63,"column":17,"nodeType":"122","endLine":63,"endColumn":29},{"ruleId":"106","severity":1,"message":"107","line":33,"column":47,"nodeType":"108","messageId":"109","endLine":33,"endColumn":49},"no-native-reassign",["123"],"no-negated-in-lhs",["124"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["125"],"'firebaseApp' is assigned a value but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'auth' is defined but never used.","'db' is defined but never used.","'watch' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation",{"desc":"126","fix":"127"},"Update the dependencies array to be: [dispatch]",{"range":"128","text":"129"},[2323,2325],"[dispatch]"]