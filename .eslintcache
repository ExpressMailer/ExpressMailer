[{"F:\\Tushar\\Project\\Gmail-clone\\src\\index.js":"1","F:\\Tushar\\Project\\Gmail-clone\\src\\App.js":"2","F:\\Tushar\\Project\\Gmail-clone\\src\\serviceWorker.js":"3","F:\\Tushar\\Project\\Gmail-clone\\src\\app\\store.js":"4","F:\\Tushar\\Project\\Gmail-clone\\src\\firebase.js":"5","F:\\Tushar\\Project\\Gmail-clone\\src\\features\\mail.js":"6","F:\\Tushar\\Project\\Gmail-clone\\src\\features\\userSlice.js":"7","F:\\Tushar\\Project\\Gmail-clone\\src\\features\\commonSlice.js":"8","F:\\Tushar\\Project\\Gmail-clone\\src\\features\\mailSlice.js":"9","F:\\Tushar\\Project\\Gmail-clone\\src\\components\\Header\\Header.js":"10","F:\\Tushar\\Project\\Gmail-clone\\src\\components\\Mail\\Mail.js":"11","F:\\Tushar\\Project\\Gmail-clone\\src\\components\\Sidebar\\Sidebar.js":"12","F:\\Tushar\\Project\\Gmail-clone\\src\\components\\SendMail\\SendMail.js":"13","F:\\Tushar\\Project\\Gmail-clone\\src\\components\\EmailList\\EmailList.js":"14","F:\\Tushar\\Project\\Gmail-clone\\src\\components\\Login\\Login.js":"15","F:\\Tushar\\Project\\Gmail-clone\\src\\components\\Meet\\Meet.js":"16","F:\\Tushar\\Project\\Gmail-clone\\src\\components\\SidebarOption\\SidebarOption.js":"17","F:\\Tushar\\Project\\Gmail-clone\\src\\components\\EmailRow\\EmailRow.js":"18","F:\\Tushar\\Project\\Gmail-clone\\src\\components\\Section\\Section.js":"19","F:\\Tushar\\Project\\Gmail-clone\\src\\features\\chatSlice.js":"20","F:\\Tushar\\Project\\Gmail-clone\\src\\components\\SendChat\\SendChat.js":"21","F:\\Tushar\\Project\\Gmail-clone\\src\\features\\chat.js":"22","F:\\Tushar\\Project\\Gmail-clone\\src\\components\\Chat\\AllChats.js":"23"},{"size":644,"mtime":1612889957536,"results":"24","hashOfConfig":"25"},{"size":3446,"mtime":1616577409885,"results":"26","hashOfConfig":"25"},{"size":5141,"mtime":1612889957536,"results":"27","hashOfConfig":"25"},{"size":416,"mtime":1616069297022,"results":"28","hashOfConfig":"25"},{"size":714,"mtime":1615958353257,"results":"29","hashOfConfig":"25"},{"size":547,"mtime":1615958353256,"results":"30","hashOfConfig":"25"},{"size":466,"mtime":1615958353256,"results":"31","hashOfConfig":"25"},{"size":451,"mtime":1615958353255,"results":"32","hashOfConfig":"25"},{"size":761,"mtime":1615958353256,"results":"33","hashOfConfig":"25"},{"size":3505,"mtime":1616511242020,"results":"34","hashOfConfig":"25"},{"size":3346,"mtime":1615958353248,"results":"35","hashOfConfig":"25"},{"size":10335,"mtime":1616573422474,"results":"36","hashOfConfig":"25"},{"size":4162,"mtime":1616573898732,"results":"37","hashOfConfig":"25"},{"size":3120,"mtime":1616528129833,"results":"38","hashOfConfig":"25"},{"size":1845,"mtime":1616511309722,"results":"39","hashOfConfig":"25"},{"size":2166,"mtime":1615958353249,"results":"40","hashOfConfig":"25"},{"size":476,"mtime":1616127333871,"results":"41","hashOfConfig":"25"},{"size":1805,"mtime":1615958353244,"results":"42","hashOfConfig":"25"},{"size":481,"mtime":1615958353250,"results":"43","hashOfConfig":"25"},{"size":950,"mtime":1616481119304,"results":"44","hashOfConfig":"25"},{"size":9422,"mtime":1616578007394,"results":"45","hashOfConfig":"25"},{"size":683,"mtime":1616396772416,"results":"46","hashOfConfig":"25"},{"size":0,"mtime":1616575343914,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"vpdyt7",{"filePath":"51","messages":"52","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"50"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"50"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"50"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"F:\\Tushar\\Project\\Gmail-clone\\src\\index.js",[],["101","102"],"F:\\Tushar\\Project\\Gmail-clone\\src\\App.js",["103","104","105","106"],"F:\\Tushar\\Project\\Gmail-clone\\src\\serviceWorker.js",[],"F:\\Tushar\\Project\\Gmail-clone\\src\\app\\store.js",[],"F:\\Tushar\\Project\\Gmail-clone\\src\\firebase.js",["107"],"import firebase from 'firebase'\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.apiKey || \"AIzaSyA6rWV50SdKlGnmnBOqfVJ6lu4UeCjtt_U\",\r\n    authDomain: process.env.authDomain || \"clone-f427f.firebaseapp.com\",\r\n    projectId: process.env.projectId || \"clone-f427f\",\r\n    storageBucket: process.env.storageBucket || \"clone-f427f.appspot.com\",\r\n    messagingSenderId: process.env.messagingSenderId || \"1086229062538\",\r\n    appId: process.env.appId || \"1:1086229062538:web:f3f5437418ee5c1f721e73\"\r\n};\r\n\r\n\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig)\r\nconst db = firebase.firestore()\r\nconst auth = firebase.auth()\r\nconst provider = new firebase.auth.GoogleAuthProvider()\r\n\r\nexport { db,auth,provider }","F:\\Tushar\\Project\\Gmail-clone\\src\\features\\mail.js",[],"F:\\Tushar\\Project\\Gmail-clone\\src\\features\\userSlice.js",[],"F:\\Tushar\\Project\\Gmail-clone\\src\\features\\commonSlice.js",[],"F:\\Tushar\\Project\\Gmail-clone\\src\\features\\mailSlice.js",[],"F:\\Tushar\\Project\\Gmail-clone\\src\\components\\Header\\Header.js",["108"],"import { Avatar, IconButton } from '@material-ui/core'\r\nimport MenuIcon from \"@material-ui/icons/Menu\"\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport AppsIcon from '@material-ui/icons/Apps';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport React from 'react'\r\nimport styles from './Header.module.css'\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport { selectUser, logout } from '../../features/userSlice';\r\nimport { auth } from '../../firebase';\r\nimport { toggleSidebar } from '../../features/commonSlice';\r\nimport logo from './email.png'\r\n// Modal when clicked on self avatar\r\nimport Button from '@material-ui/core/Button';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\n \r\nfunction Header({ showSearchResults }) {\r\n    const user = useSelector(selectUser);\r\n    const dispatch = useDispatch();\r\n\r\n    const signOut = () => {\r\n        auth.signOut().then(() => {\r\n            dispatch(logout())\r\n        })\r\n    };\r\n\r\n    const toggleSidebarFunction = () => {\r\n        dispatch(toggleSidebar())\r\n    }\r\n\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n    const handleClick = (event) => {\r\n      setAnchorEl(event.currentTarget);\r\n    };\r\n  \r\n    const handleClose = () => {\r\n      setAnchorEl(null);\r\n    };\r\n    \r\n    return (\r\n        <div className={styles.header}>\r\n            <div className={styles.header__left}>\r\n                <IconButton>\r\n                    <MenuIcon onClick={toggleSidebarFunction} />\r\n                </IconButton>\r\n                <img style={{width: \"50px\", heigth: \"25px\", marginLeft: \"25px\",  marginRight: \"15px\"}}\r\n                    src={logo}\r\n                    alt=\"gmail icon\"\r\n                />\r\n               <h2> EMAIL </h2>\r\n            </div>\r\n            <div className={styles.header__middle}>\r\n                <SearchIcon />\r\n                    <input \r\n                        placeholder=\"Search mail\" \r\n                        type=\"text\" \r\n                        className={styles.header__inputCaret} \r\n                        onChange={e => {\r\n                            // if(e.key == 'Enter'){\r\n                            showSearchResults(e.target.value);\r\n                            // }\r\n                        }}\r\n                    />\r\n                <ArrowDropDownIcon />\r\n            </div>\r\n\r\n            <div className={styles.header__right}>\r\n                <IconButton>\r\n                    <AppsIcon />\r\n                </IconButton>\r\n                <IconButton>\r\n                    <NotificationsIcon />\r\n                </IconButton>\r\n                {/* <Avatar onClick={signOut} src={user?.photoUrl} /> */}\r\n                <Avatar onClick={handleClick} src={user?.photoUrl} />\r\n                <Menu\r\n                    id=\"simple-menu\"\r\n                    anchorEl={anchorEl}\r\n                    keepMounted\r\n                    open={Boolean(anchorEl)}\r\n                    onClose={handleClose}\r\n                >\r\n                    <MenuItem>\r\n                        <Avatar src={user?.photoUrl} />\r\n                    </MenuItem>\r\n                    <MenuItem >{user.displayName}</MenuItem>\r\n                    <MenuItem >{user.email}</MenuItem>\r\n                    <MenuItem onClick={signOut}>Sign Out</MenuItem>\r\n                </Menu>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","F:\\Tushar\\Project\\Gmail-clone\\src\\components\\Mail\\Mail.js",[],"F:\\Tushar\\Project\\Gmail-clone\\src\\components\\Sidebar\\Sidebar.js",["109"],"import React, { useRef, useEffect } from 'react';\r\nimport { Avatar } from '@material-ui/core'\r\nimport styles from './Sidebar.module.css';\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport InboxIcon from \"@material-ui/icons/Inbox\"; \r\nimport { Button, IconButton, Collapse } from '@material-ui/core';\r\nimport SidebarOption from '../SidebarOption/SidebarOption';\r\nimport StarIcon from \"@material-ui/icons/Star\";\r\nimport AccessTimeIcon from \"@material-ui/icons/AccessTime\";\r\nimport LabelImportantIcon from \"@material-ui/icons/LabelImportant\";\r\nimport NearMeIcon from \"@material-ui/icons/NearMe\";\r\nimport NoteIcon from \"@material-ui/icons/Note\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport VideoCallIcon from '@material-ui/icons/VideoCall';\r\n// import PersonIcon from \"@material-ui/icons/Person\";\r\nimport ChatIcon from \"@material-ui/icons/Chat\";\r\nimport DuoIcon from \"@material-ui/icons/Duo\";\r\n// import PhoneIcon from \"@material-ui/icons/Phone\";\r\nimport ArrowDropDown from \"@material-ui/icons/ArrowDropDown\";\r\nimport { openSendMessage } from '../../features/mail';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { openSendChat } from '../../features/chat';\r\nimport { useState } from 'react';\r\n//temp\r\nimport { useSelector } from \"react-redux\"\r\nimport { selectUser } from '../../features/userSlice';\r\n\r\n// for modal\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nimport { auth, db } from '../../firebase';\r\n\r\nfunction Sidebar() {\r\n\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    //variable for opening chat collapse from recent chat person\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    //variable for opening meet collapse from recent chat person\r\n    const [isOpenmeet, setIsOpenmeet] = useState(false);\r\n    //variable for opening dialogbox for chat with new person\r\n    const [Openchatnew, setOpenchatnew] = useState(false);\r\n    //creating a refernce for TextField Component in dialogbox\r\n    const valueRef = useRef('') \r\n    // function as it's name says\r\n    const checkIfEmailExists = async (email) => {\r\n        const snapshot = await db.collection('users').where('email','==',email).limit(1).get()\r\n        console.log(snapshot.empty)\r\n        if(snapshot.empty){\r\n            return false\r\n        }\r\n        return true\r\n    }\r\n\r\n    // is called when one clicks on start chat in dialog box\r\n    const sendValue = async() => {\r\n        //on clicking button accesing current value of TextField and output it to console\r\n        console.log(valueRef.current.value) \r\n\r\n        // check here if email exist, if exists then open chat window\r\n        const emailExists = await checkIfEmailExists(valueRef.current.value);\r\n\r\n        if(emailExists){  \r\n            //close window\r\n            handleClose();\r\n            //open chat window\r\n            dispatch(openSendChat(valueRef.current.value));\r\n        }\r\n        else{\r\n            console.log(valueRef.current.value + \" doesn't exist.\");\r\n            //alert showing email doesnt exists\r\n            alert(valueRef.current.value + \" doesn't exist.\");\r\n        }\r\n         \r\n    }\r\n\r\n    // dialogbox handling functions \r\n    const handleClickOpen = () => {\r\n        setOpenchatnew(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpenchatnew(false);\r\n    };\r\n\r\n\r\n    //temp\r\n    const user = useSelector(selectUser);\r\n    // till here temp\r\n\r\n    const [recentChatpersons,setRecentChatpersons] = useState([])\r\n\r\n    useEffect(() => {\r\n        db.collection('users').where('email','==', auth.currentUser.email).onSnapshot(snapshot => {\r\n            setRecentChatpersons(snapshot.docs.map(doc => ({\r\n                id: doc.id,\r\n                data: doc.data(),\r\n                recents: doc.data()['recentlychatedwith'],\r\n            })))\r\n        })\r\n    },[])\r\n\r\n    return <div className={styles.sidebar}>\r\n            <Button \r\n                startIcon={<AddIcon fontsize=\"large\"/>}\r\n                className={styles.sidebar_compose}\r\n                onClick={() => dispatch(openSendMessage())}\r\n            >\r\n                Compose\r\n            </Button>\r\n\r\n            <SidebarOption Icon={InboxIcon} title=\"Inbox\"\r\n             number={54} selected={true} />\r\n            <SidebarOption Icon={StarIcon} title=\"Starred\" number={54} />\r\n            <SidebarOption Icon={AccessTimeIcon} title=\"Snoozed\" number={54} />\r\n            <SidebarOption Icon={LabelImportantIcon} title=\"Important\" number={54} />\r\n            <SidebarOption Icon={NearMeIcon} title=\"Sent\" number={54} />\r\n            <SidebarOption Icon={NoteIcon} title=\"Drafts\" number={54} />\r\n            <SidebarOption Icon={ExpandMoreIcon} title=\"More\" number={54} />\r\n\r\n            <div className={styles.sidebar_footer}>\r\n            <div className={styles.sidebar_features}>    \r\n                <div>\r\n                    <IconButton>\r\n                        <ArrowDropDown  onClick={() => setIsOpen(!isOpen)}/>  \r\n                    </IconButton> \r\n                Chat \r\n                </div>   \r\n                <div>\r\n                <IconButton>\r\n                        <AddIcon onClick={handleClickOpen} />\r\n                </IconButton>\r\n                    \r\n                        <Dialog open={Openchatnew} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n                            <DialogTitle id=\"form-dialog-title\">Start a new Chat</DialogTitle>\r\n                            <DialogContent>\r\n                            <DialogContentText>\r\n                            Type the recipient email to whom you want to chat with:\r\n                            </DialogContentText>\r\n                            <TextField\r\n                                autoFocus\r\n                                margin=\"dense\"\r\n                                id=\"name\"\r\n                                label=\"Email Address\"\r\n                                type=\"email\"\r\n\r\n                                //connecting inputRef property of TextField to the valueRef\r\n                                inputRef={valueRef}   \r\n                                fullWidth\r\n                            />\r\n                            </DialogContent>\r\n                            <DialogActions>\r\n                            <Button onClick={handleClose} color=\"primary\">\r\n                                Cancel\r\n                            </Button>\r\n                            <Button onClick={sendValue} color=\"primary\">\r\n                                Start Chat\r\n                            </Button>\r\n                            </DialogActions>\r\n                        </Dialog>\r\n                </div>\r\n            </div>\r\n            <div style={{overflowY: 'auto', maxHeight:'100px',}}>\r\n\r\n            <Collapse in={isOpen}>\r\n\r\n            <div className={styles.sidebar_features}>  \r\n                <div className={styles.sidebar_chatavatar}>\r\n                    <Avatar src={user?.photoUrl} />     \r\n                </div>   \r\n                <div className={styles.sidebar_chatname}>\r\n                    Tushar Bapecha \r\n                </div>\r\n                            {/* <div className={styles.sidebar_chatname_1}>Tushar</div> */}\r\n                <div className={styles.sidebar_chatfunctions}>\r\n                    <IconButton>                                        \r\n                        <ChatIcon onClick={() => dispatch(openSendChat('rugvedpb@gmail.com'))}/>\r\n                    </IconButton>\r\n                    <IconButton onClick={() => history.push('/meet/single/rugvedpb@gmail.com')}>\r\n                        <DuoIcon />\r\n                    </IconButton>\r\n                </div>\r\n            </div>\r\n\r\n            {/* ,recents:{email, displayName, photoUrl */}\r\n            {/* {recentChatpersons.map(({id,data:{from,message,timestamp,to}}) => {\r\n                return\r\n                        <SidebarChatrecent\r\n                            id={id}\r\n                            key={id}\r\n                            title={from}\r\n                            chatmsg={message}\r\n                            time={new Date(timestamp?.seconds*1000).toUTCString()}\r\n                        />\r\n                     })}  */}\r\n            </Collapse>\r\n            \r\n            </div>\r\n\r\n            \r\n            <div className={styles.sidebar_features}> \r\n                <div>\r\n                    <IconButton>\r\n                        <ArrowDropDown  onClick={() => setIsOpenmeet(!isOpenmeet)}/>  \r\n                    </IconButton> \r\n                Meet\r\n                </div> \r\n            </div>\r\n            </div>\r\n\r\n            <Collapse in={isOpenmeet}>\r\n                <div className={styles.sidebar_features}>  \r\n                    <div className={styles.sidebar_meet} onClick={() => history.push('/meet/conference/anyRoomName')}>\r\n                        <IconButton>\r\n                            <VideoCallIcon  />  \r\n                        </IconButton>\r\n                        New meeting\r\n                    </div>\r\n                </div>\r\n            </Collapse>\r\n\r\n            \r\n\r\n            {/* <div>\r\n                <b>(video call)</b><br></br>\r\n                <IconButton onClick={() => history.push('/meet/single/rugvedpb@gmail.com')}>\r\n                    rugvedpb@gmail.com\r\n                    <DuoIcon />\r\n                </IconButton>\r\n                <br></br>\r\n                <IconButton onClick={() => history.push('/meet/single/rugved.bongale@somaiya.edu')}>\r\n                    rugved.bongale@somaiya.edu\r\n                    <DuoIcon />\r\n                </IconButton>\r\n                <br></br>\r\n            </div>\r\n            <div>\r\n                <b>(conference call)</b><br></br>\r\n                <IconButton onClick={() => history.push('/meet/conference/anyRoomName')}>\r\n                    Conf call\r\n                    <DuoIcon />\r\n                </IconButton>\r\n                <br></br>\r\n            </div> */}\r\n        </div>;\r\n}\r\n\r\nexport default Sidebar\r\n","F:\\Tushar\\Project\\Gmail-clone\\src\\components\\SendMail\\SendMail.js",["110","111"],"import React from 'react';\r\nimport styles from './SendMail.module.css';\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport { Button } from '@material-ui/core';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useDispatch } from 'react-redux';\r\nimport { closeSendMessage } from '../../features/mail';\r\nimport { auth, db } from '../../firebase';\r\nimport firebase from 'firebase'\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n\r\nfunction SendMail() {\r\n\r\n    const { register, handleSubmit, watch, errors } = useForm();\r\n    const dispatch = useDispatch()\r\n\r\n<<<<<<< HEAD\r\n    const onSubmit = (formData) => {\r\n=======\r\n    const notify = (msg) => toast(msg);\r\n\r\n    const generateKeywords = (formData) => {\r\n        let searchableKeywords = [auth.currentUser.email,...formData.subject.split(' ')]\r\n        let prev = ''\r\n        for(var i=0;i<formData.subject.length;i++){\r\n            prev = prev  + formData.subject.charAt(i)\r\n            searchableKeywords.push(prev)\r\n        }\r\n        return searchableKeywords\r\n    }\r\n    \r\n    const checkIfEmailExists = async (email) => {\r\n        const snapshot = await db.collection('users').where('email','==',email).limit(1).get()\r\n        console.log(snapshot.empty)\r\n        if(snapshot.empty){\r\n            return false\r\n        }\r\n        return true\r\n    }\r\n    \r\n    const onSubmit = async (formData) => {\r\n>>>>>>> 8ab804618a2fe32f050eb3e56cf674360bf08119\r\n        // check here if email exist (for now just setting it to true)\r\n        const emailExists = await checkIfEmailExists(formData.to) \r\n        console.log(generateKeywords(formData))\r\n        if(emailExists){   \r\n            db.collection('emails').add({\r\n                to: formData.to,\r\n                from: auth.currentUser.email,\r\n                subject: formData.subject,\r\n                message: formData.message,\r\n                timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n                searchableKeywords:generateKeywords(formData),\r\n                read: false\r\n            })\r\n            dispatch(closeSendMessage())\r\n        }\r\n        else{\r\n            console.log(formData.to + \" doesn't exist.\")\r\n            alert(formData.to + \" doesn't exist.\")\r\n        }\r\n\r\n    }\r\n    \r\n    return <div className={styles.sendMail}>\r\n        <ToastContainer />\r\n        <div className={styles.sendMail__header}>\r\n            <h3>New Message</h3>\r\n            <CloseIcon \r\n                className={styles.sendMail__close} \r\n                onClick={() => dispatch(closeSendMessage())}\r\n            />\r\n        </div>\r\n    \r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n            <input \r\n                name=\"to\"\r\n                placeholder=\"To\"\r\n                type=\"text\" \r\n                type=\"email\"\r\n                ref={register({ required: true })} \r\n            />\r\n            {errors.to && <p className={styles.sendMail__error}>To is required</p>}\r\n            <input\r\n                name=\"subject\"\r\n                placeholder=\"Subject\"\r\n                type=\"text\"\r\n                ref={register({ required: true })} \r\n            />\r\n            {errors.to && <p className={styles.sendMail__error}>Subject is required</p>}\r\n\r\n           <input\r\n                name=\"message\"\r\n                placeholder=\"Message...\"\r\n                type=\"text\" \r\n                className={styles.sendMail__message}\r\n                ref={register({ required: true })} \r\n            />\r\n            {errors.to && <p className={styles.sendMail__error}>Message is required</p>}\r\n\r\n            <div className={styles.sendMail__options}>\r\n                <Button \r\n                    classNmae=\"sendMail__send\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    type=\"submit\"\r\n                >Send</Button>\r\n            </div>\r\n        </form> \r\n    </div>;\r\n}\r\n\r\nexport default SendMail\r\n","F:\\Tushar\\Project\\Gmail-clone\\src\\components\\EmailList\\EmailList.js",["112","113","114","115"],"import React, { useEffect, useState } from 'react';\r\nimport styles from './EmailList.module.css';\r\nimport { Checkbox, IconButton } from \"@material-ui/core\";\r\nimport RedoIcon from \"@material-ui/icons/Redo\";\r\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport KeyboardHideIcon from \"@material-ui/icons/KeyboardHide\";\r\nimport InboxIcon from \"@material-ui/icons/Inbox\";\r\nimport PeopleIcon from \"@material-ui/icons/People\";\r\nimport LocalOfferIcon from \"@material-ui/icons/LocalOffer\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport Section from '../Section/Section';\r\nimport { auth, db } from '../../firebase';\r\n\r\nimport EmailRow from '../EmailRow/EmailRow'\r\nfunction EmailList({ emails,setEmails }) {\r\n    // const [emails,setEmails] = useState(emails)\r\n\r\n    return (<div className={styles.emailList}>\r\n            <div className={styles.emailList__settings}>\r\n                <div className={styles.emailList__settingsLeft}>\r\n                    <Checkbox />\r\n                    <IconButton>\r\n                        <ArrowDropDownIcon />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <RedoIcon />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <MoreVertIcon />\r\n                    </IconButton>\r\n                </div>\r\n                <div className={styles.emailList__settingsRight}>\r\n                    <IconButton>\r\n                        <ChevronLeftIcon />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <ChevronRightIcon />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <KeyboardHideIcon />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <SettingsIcon />\r\n                    </IconButton>\r\n                </div>\r\n            </div>\r\n\r\n            <div className={styles.emailList__sections} >\r\n                <Section Icon={InboxIcon} title=\"Primary\" color=\"red\" selected />  \r\n                <Section Icon={PeopleIcon} title=\"Social\" color=\"#1A73E8\" />    \r\n                <Section Icon={LocalOfferIcon} title=\"Promotions\" color=\"green\" />  \r\n            </div>\r\n\r\n            <div className={styles.emailList__list}>\r\n                {emails.map(({id,data:{to,from,subject,message,timestamp}}) => {\r\n                    return <EmailRow\r\n                        id={id}\r\n                        key={id}\r\n                        title={from}\r\n                        subject={subject}\r\n                        description={message}\r\n                        time={new Date(timestamp?.seconds*1000).toUTCString()}\r\n                    />\r\n                })}\r\n                {/* {emails.map({ id,data: {to,subject,message,timestamp} } => {\r\n                })} */}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EmailList\r\n","F:\\Tushar\\Project\\Gmail-clone\\src\\components\\Login\\Login.js",[],"F:\\Tushar\\Project\\Gmail-clone\\src\\components\\Meet\\Meet.js",["116"],"import React, { useState } from 'react'\r\n\r\nimport { Jutsu } from 'react-jutsu'\r\nimport { useHistory } from 'react-router-dom';\r\nimport { auth } from '../../firebase'\r\n\r\nconst Meet = () => {\r\n    const history = useHistory();\r\n    const fullUrl = window.location.href\r\n    let meetCode = ''\r\n    let userClient = ''\r\n    let meetPassword = ''\r\n    const currentUser = auth.currentUser\r\n\r\n    if(fullUrl.includes('/meet/single/')){\r\n        userClient = fullUrl.split('/meet/single/')[1]\r\n        if(currentUser.email > userClient){\r\n            meetCode = userClient + '-' + currentUser.email\r\n        }\r\n        else{\r\n            meetCode = currentUser.email + '-' + userClient \r\n        }\r\n        meetPassword = meetCode // temporary\r\n    }else if(fullUrl.includes('/meet/conference/')){\r\n        let confCode = fullUrl.split('/meet/conference/')[1] || ''\r\n        meetCode = confCode\r\n        meetPassword = ''\r\n    }\r\n\r\n\r\n  const [room, setRoom] = useState(meetCode)\r\n  const [name, setName] = useState(currentUser.displayName)\r\n  const [call, setCall] = useState(userClient == '' ? false : true)\r\n  const [password, setPassword] = useState(meetPassword)\r\n\r\n  const handleClick = event => {\r\n    event.preventDefault()\r\n    console.log(room+\" \"+name+\" \"+password)\r\n    if (room && name) setCall(true)\r\n  }\r\n\r\n\r\n\r\n  return call ? (\r\n    <Jutsu\r\n      roomName={room}\r\n      displayName={name}\r\n      password={password}\r\n      onMeetingEnd={() => history.push('/')}\r\n      loadingComponent={<p>loading ...</p>}\r\n      errorComponent={<p>Oops, something went wrong</p>} />\r\n  ) : (\r\n    <div>\r\n        <form>\r\n            <input id='room' type='text' placeholder='Room' value={room} onChange={(e) => setRoom(e.target.value)} />\r\n            <input id='name' type='text' placeholder='Name' value={name} onChange={(e) => setName(e.target.value)} />\r\n            <input id='password' type='text' placeholder='Password (optional)' value={password} onChange={(e) => setPassword(e.target.value)} />\r\n            <button onClick={handleClick} type='submit'>\r\n                Start / Join\r\n            </button>\r\n        </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Meet","F:\\Tushar\\Project\\Gmail-clone\\src\\components\\SidebarOption\\SidebarOption.js",[],"F:\\Tushar\\Project\\Gmail-clone\\src\\components\\EmailRow\\EmailRow.js",[],"F:\\Tushar\\Project\\Gmail-clone\\src\\components\\Section\\Section.js",[],"F:\\Tushar\\Project\\Gmail-clone\\src\\features\\chatSlice.js",[],"F:\\Tushar\\Project\\Gmail-clone\\src\\components\\SendChat\\SendChat.js",["117","118","119","120","121","122","123","124","125","126","127","128","129"],"F:\\Tushar\\Project\\Gmail-clone\\src\\features\\chat.js",[],"F:\\Tushar\\Project\\Gmail-clone\\src\\components\\Chat\\AllChats.js",[],{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","severity":1,"message":"135","line":9,"column":3,"nodeType":"136","messageId":"137","endLine":9,"endColumn":7},{"ruleId":"138","severity":1,"message":"139","line":49,"column":21,"nodeType":"140","messageId":"141","endLine":49,"endColumn":23},{"ruleId":"138","severity":1,"message":"139","line":60,"column":31,"nodeType":"140","messageId":"141","endLine":60,"endColumn":33},{"ruleId":"142","severity":1,"message":"143","line":87,"column":6,"nodeType":"144","endLine":87,"endColumn":8,"suggestions":"145"},{"ruleId":"134","severity":1,"message":"146","line":13,"column":7,"nodeType":"136","messageId":"137","endLine":13,"endColumn":18},{"ruleId":"134","severity":1,"message":"147","line":15,"column":8,"nodeType":"136","messageId":"137","endLine":15,"endColumn":14},{"ruleId":"134","severity":1,"message":"148","line":97,"column":12,"nodeType":"136","messageId":"137","endLine":97,"endColumn":29},{"ruleId":"134","severity":1,"message":"149","line":13,"column":37,"nodeType":"136","messageId":"137","endLine":13,"endColumn":42},{"ruleId":"150","severity":1,"message":"151","line":50,"column":17,"nodeType":"152","endLine":50,"endColumn":29},{"ruleId":"134","severity":1,"message":"153","line":1,"column":17,"nodeType":"136","messageId":"137","endLine":1,"endColumn":26},{"ruleId":"134","severity":1,"message":"154","line":1,"column":28,"nodeType":"136","messageId":"137","endLine":1,"endColumn":36},{"ruleId":"134","severity":1,"message":"155","line":15,"column":10,"nodeType":"136","messageId":"137","endLine":15,"endColumn":14},{"ruleId":"134","severity":1,"message":"156","line":15,"column":16,"nodeType":"136","messageId":"137","endLine":15,"endColumn":18},{"ruleId":"138","severity":1,"message":"139","line":33,"column":47,"nodeType":"140","messageId":"141","endLine":33,"endColumn":49},{"ruleId":"134","severity":1,"message":"147","line":4,"column":10,"nodeType":"136","messageId":"137","endLine":4,"endColumn":16},{"ruleId":"134","severity":1,"message":"157","line":4,"column":18,"nodeType":"136","messageId":"137","endLine":4,"endColumn":22},{"ruleId":"134","severity":1,"message":"158","line":4,"column":24,"nodeType":"136","messageId":"137","endLine":4,"endColumn":34},{"ruleId":"134","severity":1,"message":"159","line":5,"column":10,"nodeType":"136","messageId":"137","endLine":5,"endColumn":17},{"ruleId":"134","severity":1,"message":"160","line":9,"column":10,"nodeType":"136","messageId":"137","endLine":9,"endColumn":20},{"ruleId":"134","severity":1,"message":"161","line":11,"column":8,"nodeType":"136","messageId":"137","endLine":11,"endColumn":16},{"ruleId":"134","severity":1,"message":"162","line":17,"column":10,"nodeType":"136","messageId":"137","endLine":17,"endColumn":24},{"ruleId":"134","severity":1,"message":"163","line":17,"column":26,"nodeType":"136","messageId":"137","endLine":17,"endColumn":31},{"ruleId":"134","severity":1,"message":"164","line":28,"column":12,"nodeType":"136","messageId":"137","endLine":28,"endColumn":23},{"ruleId":"134","severity":1,"message":"165","line":28,"column":25,"nodeType":"136","messageId":"137","endLine":28,"endColumn":39},{"ruleId":"138","severity":1,"message":"166","line":81,"column":25,"nodeType":"140","messageId":"141","endLine":81,"endColumn":27},{"ruleId":"167","severity":1,"message":"168","line":136,"column":9,"nodeType":"169","messageId":"170","endLine":136,"endColumn":34},{"ruleId":"142","severity":1,"message":"171","line":151,"column":7,"nodeType":"144","endLine":151,"endColumn":9,"suggestions":"172"},"no-native-reassign",["173"],"no-negated-in-lhs",["174"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["175"],"'firebaseApp' is assigned a value but never used.","'Button' is defined but never used.","'recentChatpersons' is assigned a value but never used.","'watch' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'useEffect' is defined but never used.","'useState' is defined but never used.","'auth' is defined but never used.","'db' is defined but never used.","'Grid' is defined but never used.","'IconButton' is defined but never used.","'useForm' is defined but never used.","'selectUser' is defined but never used.","'AllChats' is defined but never used.","'ToastContainer' is defined but never used.","'toast' is defined but never used.","'userDetails' is assigned a value but never used.","'setuserDetails' is assigned a value but never used.","Expected '!==' and instead saw '!='.","no-unreachable","Unreachable code.","ExpressionStatement","unreachableCode","React Hook useEffect has a missing dependency: 'docName'. Either include it or remove the dependency array.",["176"],"no-global-assign","no-unsafe-negation",{"desc":"177","fix":"178"},{"desc":"179","fix":"180"},"Update the dependencies array to be: [dispatch]",{"range":"181","text":"182"},"Update the dependencies array to be: [docName]",{"range":"183","text":"184"},[2563,2565],"[dispatch]",[5667,5669],"[docName]"]